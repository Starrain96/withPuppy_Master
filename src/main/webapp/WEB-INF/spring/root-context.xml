<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean id="my" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="config"></constructor-arg>
	</bean>

	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/withPuppy?serverTimezone=UTC"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>



	<bean id="config" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcp"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- 이메일 인증 관련 빈 등록 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="emailsender340@gmail.com" />
		<property name="password" value="pnmhyveclttifnkz" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>

	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"></property>
	</bean>

	<!-- Transaction 설정 -->

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbcp" />
	</bean>

	<!-- Transaction을 위한 AOP 설정 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="insertOCR"
			expression="execution(public * com.multi.withPuppy.*.insertOCR(..))" />
		<aop:pointcut id="insertOrderDetail"
			expression="execution(public * com.multi.withPuppy.*.insertOrderDetail(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="insertOCR" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="insertOrderDetail" />
	</aop:config>

	<!-- 선언적 Transaction 설정 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insertOCR" rollback-for="Exception" />
			<tx:method name="insertOrderDetail" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
</beans>